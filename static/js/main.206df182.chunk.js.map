{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","useState","setRobots","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,qBAAiDG,IAAI,WAC7D,gCACI,6BAAKL,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCKpBS,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAQ,QAApE,SACKJ,EAAMK,a,4BCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKJ,MAAM,CAACC,UAAS,M,+BAIrB,OAAKG,KAAKJ,MAAMC,SACL,yDAEJG,KAAKX,MAAMK,a,GAhBCO,aCsCZC,MAjCf,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACJzB,EADI,KACG0B,EADH,OAE2BD,mBAAS,IAFpC,mBAEJpB,EAFI,KAESsB,EAFT,KAIXC,qBAAU,WACVC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAUP,EAAUO,QAC5B,IAEF,IAKUC,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEzD,OAAQrC,EAAOuC,OAGf,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAbI,SAACkC,GAEpBb,EAAea,EAAMC,OAAOC,UAYxB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1C,OAASkC,WAP/B,6CCdOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.206df182.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?set=set3&200x200`} alt=\"Robots\"/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    return(\n        <div>\n         {\n            robots.map((user, i) => {\n                return(\n                    <Card\n                    key={robots[i].id}\n                    id={robots[i].id}\n                    name={robots[i].name}\n                    email={robots[i].email}\n                    />\n                );\n            })\n         }\n      </div>\n    );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange}) => {\n    return(\n        <div className=\"pa2\">\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\"\n                placeholder=\"Search Robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid #000', height: '90vh'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n","import React, { Component }from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.state({hasError:true});\n    }\n\n    render() {\n        if  (this.state.hasError) {\n            return <h1>Ooops! We have an error</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;\n","import React, {useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nfunction App() {\n    const [robots,setRobots] = useState([]);\n    const [searchfield, setSearchfield] = useState('');\n\n    useEffect(()=> {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => {setRobots(users)});\n    },[]) // shortcut for componentDidMount\n\n    const onSearchChange = (event) => {\n\n        setSearchfield(event.target.value)\n    }\n\n        const filteredRobots = robots.filter(robot=> {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ?\n        <h1>Loading...</h1> :\n        (\n        <div className=\"tc\">\n            <h1 className=\"f1\">RoboFriends</h1>\n            <SearchBox searchChange={onSearchChange} />\n            <Scroll>\n                <ErrorBoundry>\n                    <CardList robots ={filteredRobots} />\n                </ErrorBoundry>\n            </Scroll>\n        </div>\n        );\n    }\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}